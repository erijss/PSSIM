{
    "Parameters": {
        "certificate_Client_Path": {
            "Type": "string",
            "Description": "The physical path to pfx file where client certificate is stored.",
            "DefaultValue": ""
        },
        "certificate_Root_Path": {
            "Type": "string",
            "Description": "The physical path to pfx file where root certificate is stored.",
            "DefaultValue": ""
        },
        "certificate_Client_Password": {
            "Type": "string",
            "Description": "The password of client certificate file.",
            "DefaultValue": "sif-default"
        },
        "certificate_Root_Password": {
            "Type": "string",
            "Description": "The password of root certificate file.",
            "DefaultValue": "sif-default"
        },
        "Update": {
            "Type": "bool",
            "Description": "The parameter for the installing delta WDP packages.",
            "DefaultValue": false
        }
    },
    "Variables": {
        "Certificate.Client.Password.Secure": "[ConvertToSecureString(String:parameter('certificate_Client_Password'),AsPlainText:true,Force:true)]",
        "Certificate.Root.Password.Secure": "[ConvertToSecureString(String:parameter('certificate_Root_Password'),AsPlainText:true,Force:true)]",
        "Certificate.Root.Store": "Cert:\\LocalMachine\\Root",
        "Certificate.Client.Store": "Cert:\\LocalMachine\\My"
    },
    "Tasks": {
        "ImportRootCert":{
            "Type": "ImportPfxCertificate",
            "Description": "Import the root certificate from pfx file",
            "Params": {
                "FilePath": "[parameter('certificate_Root_Path')]",
                "Password": "[variable('Certificate.Root.Password.Secure')]",
                "CertStoreLocation": "[variable('Certificate.Root.Store')]",
                "Exportable": true
            },
            "Skip": "[or(not(parameter('certificate_Root_Path')),parameter('Update'))]"
        },
        "ImportClientCert":{
            "Type": "ImportPfxCertificate",
            "Description": "Import the client certificate from pfx file",
            "Params": {
                "FilePath": "[parameter('certificate_Client_Path')]",
                "Password": "[variable('Certificate.Client.Password.Secure')]",
                "CertStoreLocation": "[variable('Certificate.Client.Store')]",
                "Exportable": true
            },
            "Skip": "[or(not(parameter('certificate_Client_Path')),parameter('Update'))]"
        }
    },
    "Register":{
        "Tasks": {
            "ImportPfxCertificate": "Import-PfxCertificate"
        },
        "ConfigFunction": {
            "ConvertToSecureString" :"ConvertTo-SecureString"
        }
    }
}
