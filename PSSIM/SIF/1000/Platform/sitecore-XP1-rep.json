{
    "Parameters": {
        "app_Package": {
            "Type": "string",
            "Description": "The path to the Web Deploy package to deploy.",
            "DefaultValue": ""
        },
        "app_License": {
            "Type": "string",
            "Description": "The path to the Sitecore license file.",
            "DefaultValue": ".\\License.xml"
        },
        "app_Certificate": {
            "Type": "string",
            "Description": "The certificate to use for HTTPS web bindings. Provide the name or the thumbprint. If not provided a certificate will be generated.",
            "DefaultValue": ""
        },
        "sqlserver_DatabasePrefix": {
            "Type": "string",
            "Description": "The prefix used for all Sql databases.",
            "DefaultValue": ""
        },
        "app_Name": {
            "Type": "string",
            "DefaultValue": "SitecoreReporting",
            "Description": "The name of the site to be deployed."
        },
        "app_Path": {
            "Type": "String",
            "Description": "Root folder to install the site to. If left on the default [systemdrive]:\\inetpub\\wwwroot will be used.",
            "DefaultValue": ""
        },
        "database_Core_User": {
            "Type": "string",
            "DefaultValue": "coreuser",
            "Description": "The Sql user for the Core connection string in Sitecore."
        },
        "database_Core_Password": {
            "Type": "string",
            "DefaultValue": "SIF-Default",
            "Description": "The Sql password for the Core connection string in Sitecore."
        },
        "database_Security_User": {
            "Type": "string",
            "DefaultValue": "securityuser",
            "Description": "The Sql user for the Security connection string in Sitecore."
        },
        "database_Security_Password": {
            "Type": "string",
            "DefaultValue": "SIF-Default",
            "Description": "The Sql password for the Security connection string in Sitecore."
        },
        "database_Master_User": {
            "Type": "string",
            "DefaultValue": "masteruser",
            "Description": "The Sql user for the Master connection string in Sitecore."
        },
        "database_Master_Password": {
            "Type": "string",
            "DefaultValue": "SIF-Default",
            "Description": "The Sql password for the Master connection string in Sitecore."
        },
        "database_Reporting_User": {
            "Type": "string",
            "DefaultValue": "reportinguser",
            "Description": "The Sql user for the Reporting connection string in Sitecore."
        },
        "database_Reporting_Password": {
            "Type": "string",
            "DefaultValue": "SIF-Default",
            "Description": "The Sql password for the Reporting connection string in Sitecore."
        },
        "sqlserver_Instance": {
            "Type": "string",
            "DefaultValue": ".\\sqlserver_Instance",
            "Description": "The Sql Server where databases will be installed."
        },
        "endpoint_Reporting_ApiKey": {
            "Type": "string",
            "DefaultValue": "00112233445566778899AABBCCDDEEFF",
            "Description": "The api key to use with the Reporting Service server must be at least 32 characters long. e.g 00112233445566778899AABBCCDDEEFF"
        },
        "app_HostMappingName": {
            "Type": "string",
            "Reference": "app_Name",
            "Description": "The host mapping name of the app."
        },
        "app_DnsName": {
            "Type": "string",
            "Reference": "app_Name",
            "Description": "The dns name of the app."
        },
        "packages_TemporaryLocation": {
            "Type": "String",
            "Description": "Alternative location to save WDP packages. If left on the default $Env:Temp will be used.",
            "DefaultValue": "",
            "Validate": "[TestPath(variable('Package.Download.Location'))]"
        },
        "packages_DownloadLocations": {
            "Type": "String",
            "Description": "File with URI and SHA256 hashes of dynamically downloadable WDPs.",
            "DefaultValue": ".\\downloads.json"
        }
    },
    "Variables": {
        "Sql.Database.Core.Name": "[concat(parameter('sqlserver_DatabasePrefix'), '_Core')]",
        "Sql.Database.Security.Name": "[concat(parameter('sqlserver_DatabasePrefix'), '_Core')]",
        "Sql.Database.Master.Name": "[concat(parameter('sqlserver_DatabasePrefix'), '_Master')]",
        "Sql.Database.Web.Name": "[concat(parameter('sqlserver_DatabasePrefix'), '_Web')]",
        "Sql.Database.Reporting.Name": "[concat(parameter('sqlserver_DatabasePrefix'), '_Reporting')]",
        "Sql.Database.Reporting.Password": "[parameter('database_Reporting_Password')]",
        "Sql.Database.Core.Password": "[parameter('database_Core_Password')]",
        "Sql.Database.Security.Password": "[parameter('database_Security_Password')]",
        "Sql.Database.Master.Password": "[parameter('database_Master_Password')]",

        "Certificate.Store": "Cert:\\Localmachine\\My",
        "Certificate.App.Thumbprint": "[GetCertificateThumbprint(parameter('app_Certificate'), variable('Certificate.Store'))]",

        "App.Path": "[if(variable('App.Path.Test'),variable('App.Path.Default'),variable('App.Path.Custom'))]",
        "App.Path.Default": "[joinpath(environment('SystemDrive'), 'inetpub', 'wwwroot', parameter('app_Name'))]",
        "App.Path.Custom": "[joinpath(parameter('app_Path'),parameter('app_Name'))]",
        "App.Path.Test": "[equal(parameter('app_Path'),'')]",
        "App.DataFolder": "[joinpath(variable('App.Path'), 'App_Data')]",

        "endpoint_Reporting_Url.ApiKey": "[parameter('endpoint_Reporting_ApiKey')]",

        "Packages.DownloadLocations.File": "[ReadJson(parameter('packages_DownloadLocations'))]",
        "Packages.DownloadLocations.File.Test": "[TestPath(Path:Parameter('packages_DownloadLocations'))]",

        "Package.Download.Identifier": "sitecore-XP1-rep.json",
        "Package.Download.Location": "[if(variable('Package.Download.Location.Test'),Environment('Temp'),parameter('packages_TemporaryLocation'))]",
        "Package.Download.Location.Test": "[equal(parameter('packages_TemporaryLocation'),'')]",
        "Package.Download.Object": "[SelectObject(InputObject:variable('Packages.DownloadLocations.File'),ExpandProperty:variable('Package.Download.Identifier'))]",
        "Package.Download.Uri": "[SelectObject(InputObject:variable('Package.Download.Object'),ExpandProperty:'Uri')]",
        "Package.Download.Hash": "[SelectObject(InputObject:variable('Package.Download.Object'),ExpandProperty:'Hash')]",
        "Package.Download.Path": "[JoinPath(variable('Package.Download.Location'),variable('Package.Download.Filename'))]",
        "Package.Download.Document": "[SplitPath(Path:variable('Package.Download.Uri'),Leaf:true)]",
        "Package.Download.Filename": "[Split(String:variable('Package.Download.Document'),Characters:'?')]",

        "app_Package": "[if(parameter('app_Package'),parameter('app_Package'),variable('Package.Download.Path'))]",
        "Package.Available": "[or(variable('Package.Provided'),not(variable('Packages.DownloadLocations.File.Test')))]",
        "Package.Provided": "[if(parameter('app_Package'),parameter('app_Package'),'')]"
    },
    "Register": {
        "ConfigFunction": {
            "TestPath": "Test-Path",
            "SelectObject": "Select-Object",
            "SplitPath": "Split-Path",
            "GetVariable": "Get-Variable"
        },
        "Tasks": {
            "RemoveItem": "Remove-Item"
        }
    },
    "Tasks": {
        "DownloadWDP": {
            "Description": "Download the WDP and verifies it against the stored hash.",
            "Type": "DownloadFile",
            "Params": {
                "SourceUri": "[variable('Package.Download.URI')]",
                "DestinationPath": "[variable('Package.Download.Path')]",
                "Hash": "[variable('Package.Download.Hash')]"
            },
            "Skip": "[variable('Package.Available')]"
        },
        "CreatePaths": {
            "Description": "Ensure the destination path for the site exists.",
            "Type": "EnsurePath",
            "Params": {
                "Exists": [
                    "[variable('App.Path')]"
                ]
            }
        },
        "CreateAppPool": {
            "Description": "Creates or updates the app pool.",
            "Type": "AppPool",
            "Params": {
                "Name": "[parameter('app_Name')]",
                "Properties": {
                    "ProcessModel": {
                        "identityType": "ApplicationPoolIdentity"
                    }
                }
            }
        },
        "CreateWebsite": {
            "Description": "Creates or updates the IIS website instance.",
            "Type": "Website",
            "Params": {
                "Name": "[parameter('app_Name')]",
                "ApplicationPool": "[parameter('app_Name')]",
                "PhysicalPath": "[variable('App.Path')]"
            }
        },
        "StopWebsite": {
            "Description": "Stops the website if it is running.",
            "Type": "ManageWebsite",
            "Params": {
                "Name": "[parameter('app_Name')]",
                "Action": "Stop"
            }
        },
        "StopAppPool": {
            "Description": "Stops the app pool if it is running.",
            "Type": "ManageAppPool",
            "Params": {
                "Name": "[parameter('app_Name')]",
                "Action": "Stop"
            }
        },
        "RemoveDefaultBinding": {
            "Description": "Removes the default *:80 web binding.",
            "Type": "WebBinding",
            "Params": {
                "app_Name": "[parameter('app_Name')]",
                "Remove": [
                    {
                        "Port": "80",
                        "IPAddress": "*"
                    }
                ]
            }
        },
        "CreateBindingsWithThumbprint": {
            "Description": "Configures the site bindings for the webapp.",
            "Type": "WebBinding",
            "Params": {
                "app_Name": "[parameter('app_Name')]",
                "Add": [
                    {
                        "HostHeader": "[parameter('app_DnsName')]",
                        "Protocol": "https",
                        "SSLFlags": 1,
                        "Thumbprint": "[variable('Certificate.App.Thumbprint')]"
                    }
                ]
            },
            "Skip": "[not(parameter('app_Certificate'))]"
        },
        "CreateHostHeader": {
            "Description": "Sets a hostheader for the webapp.",
            "Type": "HostHeader",
            "Params": {
                "HostName": "[parameter('app_HostMappingName')]"
            },
            "Skip": "[not(parameter('app_HostMappingName'))]"
        },
        "SetPermissions": {
            "Description": "Sets permissions for the app pool user.",
            "Type": "FilePermissions",
            "Params": {
                "Path": "[variable('App.Path')]",
                "Rights": [
                    {
                        "User": "[concat('IIS AppPool\\', parameter('app_Name'))]",
                        "FileSystemRights": "FullControl",
                        "InheritanceFlags": [
                            "ContainerInherit",
                            "ObjectInherit"
                        ]
                    }
                ]
            }
        },
        "InstallWDP": {
            "Type": "WebDeploy",
            "Params": {
                "Verb": "Sync",
                "Arguments": {
                    "Source": {
                        "app_Package": "[resolvepath(variable('app_Package'))]"
                    },
                    "Dest": "Auto",
                    "SetParam": [
                        {
                            "Name": "Application Path",
                            "Value": "[parameter('app_Name')]"
                        },
                        {
                            "Name": "Database Server Name",
                            "Value": "[parameter('sqlserver_Instance')]"
                        },
                        {
                            "Name": "Core DB Name",
                            "Value": "[variable('Sql.Database.Core.Name')]"
                        },
                        {
                            "Name": "Security DB Name",
                            "Value": "[variable('Sql.Database.Security.Name')]"
                        },
                        {
                            "Name": "Master DB Name",
                            "Value": "[variable('Sql.Database.Master.Name')]"
                        },
                        {
                            "Name": "Reporting DB Name",
                            "Value": "[variable('Sql.Database.Reporting.Name')]"
                        },
                        {
                            "Name": "Core DB User Name",
                            "Value": "[parameter('database_Core_User')]"
                        },
                        {
                            "Name": "Core DB User Password",
                            "Value": "[variable('Sql.Database.Core.Password')]"
                        },
                        {
                            "Name": "Security DB User Name",
                            "Value": "[parameter('database_Security_User')]"
                        },
                        {
                            "Name": "Security DB User Password",
                            "Value": "[variable('Sql.Database.Security.Password')]"
                        },
                        {
                            "Name": "Master DB User Name",
                            "Value": "[parameter('database_Master_User')]"
                        },
                        {
                            "Name": "Master DB User Password",
                            "Value": "[variable('Sql.Database.Master.Password')]"
                        },
                        {
                            "Name": "Reporting DB User Name",
                            "Value": "[parameter('database_Reporting_User')]"
                        },
                        {
                            "Name": "Reporting DB User Password",
                            "Value": "[variable('Sql.Database.Reporting.Password')]"
                        },
                        {
                            "Name": "Reporting Service Api Key",
                            "Value": "[variable('endpoint_Reporting_Url.ApiKey')]"
                        }
                    ]
                }
            }
        },
        "CreateBindingsWithDevelopmentThumbprint": {
            "Description": "Creates a new thumbprint with a custom CA.",
            "Type": "AddWebFeatureSSL",
            "Params": {
                "app_Name": "[parameter('app_Name')]",
                "HostName": "[parameter('app_DnsName')]",
                "OutputDirectory": "[variable('App.DataFolder')]"
            },
            "Skip": "[parameter('app_Certificate')]"
        },
        "SetLicense": {
            "Description": "Copies the license file to the instance data folder.",
            "Type": "Copy",
            "Params": {
                "Source": "[resolvepath(parameter('app_License'))]",
                "Destination": "[variable('App.DataFolder')]"
            }
        },
        "StartAppPool": {
            "Description": "Starts the app pool.",
            "Type": "ManageAppPool",
            "Params": {
                "Name": "[parameter('app_Name')]",
                "Action": "Start"
            }
        },
        "StartWebsite": {
            "Description": "Starts the webapp.",
            "Type": "ManageWebsite",
            "Params": {
                "Name": "[parameter('app_Name')]",
                "Action": "Start"
            }
        }
    },
    "UninstallTasks": {
        "StopWebsite": {
            "Description": "Stops the website if it is running.",
            "Type": "ManageWebsite",
            "Params": {
                "Name": "[parameter('app_Name')]",
                "Action": "Stop",
                "ErrorAction": "SilentlyContinue"
            }
        },
        "StopAppPool": {
            "Description": "Stops the app pool if it is running.",
            "Type": "ManageAppPool",
            "Params": {
                "Name": "[parameter('app_Name')]",
                "Action": "Stop",
                "ErrorAction": "SilentlyContinue"
            }
        },
        "RemoveWebsite": {
            "Description": "Removes the IIS webapp.",
            "Type": "RemoveWebsite",
            "Params": {
                "Name": "[parameter('app_Name')]"
            }
        },
        "RemoveAppPool": {
            "Description": "Removes the IIS application pool.",
            "Type": "RemoveAppPool",
            "Params": {
                "Name": "[parameter('app_Name')]"
            }
        },
        "RemoveContent": {
            "Description": "Removes website content.",
            "Type": "RemoveItem",
            "Params": {
                "Path": "[variable('App.Path')]",
                "Recurse": true,
                "ErrorAction": "SilentlyContinue"
            }
        },
        "RemoveHostHeader": {
            "Description": "Removes the website host name.",
            "Type": "HostHeader",
            "Params": {
                "HostName": "[parameter('app_Name')]",
                "Action": "Remove"
            }
        }
    }
}
