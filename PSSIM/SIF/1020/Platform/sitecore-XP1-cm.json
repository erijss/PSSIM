{
  "Parameters": {
    "AppPackage": {
      "Type": "string",
      "Description": "The path to the Web Deploy package to deploy.",
      "DefaultValue": ""
    },
    "AppsLicenseFile": {
      "Type": "string",
      "Description": "The path to the Sitecore license file.",
      "DefaultValue": ".\\License.xml"
    },
    "SqlServerDatabasePrefix": {
      "Type": "string",
      "Description": "The prefix used for all Sql databases.",
      "DefaultValue": ""
    },
    "SolrCorePrefix": {
      "Type": "string",
      "Description": "The prefix used for all Solr cores.",
      "DefaultValue": ""
    },
    "AppCertificate": {
      "Type": "string",
      "Description": "The certificate to use for HTTPS web bindings. Provide the name or the thumbprint. If not provided a certificate will be generated.",
      "DefaultValue": ""
    },
    "XConnectCertificate": {
      "Type": "string",
      "Description": "The certificate to use for encryption. Provide the name or the thumbprint.",
      "DefaultValue": ""
    },
    "AppName": {
      "Type": "string",
      "DefaultValue": "SitecoreCM",
      "Description": "The name of the site to be deployed."
    },
    "AppsRootFolder": {
      "Type": "String",
      "Description": "Root folder to install the site to. If left on the default [systemdrive]:\\inetpub\\wwwroot will be used.",
      "DefaultValue": ""
    },
    "SitecoreAdminPassword": {
      "Type": "string",
      "DefaultValue": "",
      "Description": "The admin password for the Sitecore instance."
    },
    "SqlServerAdminUser": {
      "Type": "string",
      "DefaultValue": "sa",
      "Description": "The Sql admin user account to use when installing databases."
    },
    "SqlServerAdminPassword": {
      "Type": "string",
      "DefaultValue": "12345",
      "Description": "The Sql admin password to use when installing databases."
    },
    "DatabaseCoreUser": {
      "Type": "string",
      "DefaultValue": "coreuser",
      "Description": "The user to create and use in Core connection string."
    },
    "DatabaseCorePassword": {
      "Type": "string",
      "DefaultValue": "SIF-Default",
      "Description": "The Sql password for the Core connection string in Sitecore."
    },
    "DatabaseSecurityUser": {
      "Type": "string",
      "DefaultValue": "securityuser",
      "Description": "The user to create and use in Security connection string."
    },
    "DatabaseSecurityPassword": {
      "Type": "string",
      "DefaultValue": "SIF-Default",
      "Description": "The Sql password for the Security connection string in Sitecore."
    },
    "DatabaseMasterUser": {
      "Type": "string",
      "DefaultValue": "masteruser",
      "Description": "The user to create and use in Master connection string."
    },
    "DatabaseMasterPassword": {
      "Type": "string",
      "DefaultValue": "SIF-Default",
      "Description": "The Sql password for the Master connection string in Sitecore."
    },
    "DatabaseWebUser": {
      "Type": "string",
      "DefaultValue": "webuser",
      "Description": "The user to create and use in Web connection string."
    },
    "DatabaseWebPassword": {
      "Type": "string",
      "DefaultValue": "SIF-Default",
      "Description": "The Sql password for the Web connection string in Sitecore."
    },
    "DatabaseReportingUser": {
      "Type": "string",
      "DefaultValue": "reportinguser",
      "Description": "The user to create and use in Reporting connection string."
    },
    "DatabaseReportingPassword": {
      "Type": "string",
      "DefaultValue": "SIF-Default",
      "Description": "The Sql password for the Reporting connection string in Sitecore."
    },
    "DatabaseReferenceDataUser": {
      "Type": "string",
      "DefaultValue": "referencedatauser",
      "Description": "The user to create and use in Reference Data connection string."
    },
    "DatabaseReferenceDataPassword": {
      "Type": "string",
      "DefaultValue": "SIF-Default",
      "Description": "The Sql password for the Reference Data connection string in Sitecore."
    },
    "DatabaseFormsUser": {
      "Type": "string",
      "DefaultValue": "formsuser",
      "Description": "The user to create and use in Experience Forms connection string."
    },
    "DatabaseFormsPassword": {
      "Type": "string",
      "DefaultValue": "SIF-Default",
      "Description": "The Sql password for the Experience Forms connection string in Sitecore."
    },
    "DatabaseExmMasterUser": {
      "Type": "string",
      "DefaultValue": "exmmasteruser",
      "Description": "The Sql user for the EXM Master connection string in Sitecore."
    },
    "DatabaseExmMasterPassword": {
      "Type": "string",
      "DefaultValue": "SIF-Default",
      "Description": "The Sql password for the EXM Master connection string in Sitecore."
    },
    "DatabaseMessagingUser": {
      "Type": "string",
      "DefaultValue": "messaginguser",
      "Description": "The Sql user for the Messaging connection string in Sitecore."
    },
    "DatabaseMessagingPassword": {
      "Type": "string",
      "DefaultValue": "SIF-Default",
      "Description": "The Sql password for the Messaging connection string in Sitecore."
    },
    "SqlServerInstance": {
      "Type": "string",
      "DefaultValue": ".\\SQL2016",
      "Description": "The Sql Server where databases will be installed."
    },
    "SitecoreEXMEdsPProvider": {
      "Type": "string",
      "DefaultValue": "CustomSMTP",
      "Description": "The default EDS provider to be used."
    },
    "SolrUrl": {
      "Type": "string",
      "DefaultValue": "https://localhost:8983/solr",
      "Description": "The Solr instance to use."
    },
    "EndpointProcessing": {
      "Type": "string",
      "DefaultValue": "https://SitecoreProcessing",
      "Description": "The url for the Processing Service."
    },
    "EndpointReportingApiKey": {
      "Type": "string",
      "DefaultValue": "00112233445566778899AABBCCDDEEFF",
      "Description": "The api key to use with the Processing Service server must be at least 32 characters long. e.g 00112233445566778899AABBCCDDEEFF"
    },
    "EndpointXConnectCollection": {
      "Type": "string",
      "DefaultValue": "https://XConnectCollection",
      "Description": "The url for the XConnect Collection Service."
    },
    "EndpointXConnectCollectionSearch": {
      "Type": "string",
      "DefaultValue": "https://XConnectCollectionSearch",
      "Description": "The url for the XConnect Collection Search Service."
    },
    "EndpointReferenceData": {
      "Type": "string",
      "DefaultValue": "https://ReferenceData",
      "Description": "The url for the XConnect Reference Data Service."
    },
    "EndpointMarketingAutomationOperations": {
      "Type": "string",
      "DefaultValue": "http://XConnectMarketingAutomation",
      "Description": "The url for the XConnect Marketing Automation Service."
    },
    "EndpointMarketingAutomationReporting": {
      "Type": "string",
      "DefaultValue": "http://XConnectMarketingAutomationReporting",
      "Description": "The url for the XConnect Marketing Automation Reporting Service."
    },
    "EndpointCortexReporting": {
      "Type": "string",
      "DefaultValue": "https://CortexReporting",
      "Description": "The url for the Cortex Reporting Service."
    },
    "EndpointCortexProcessing": {
      "Type": "string",
      "DefaultValue": "https://CortexProcessing",
      "Description": "The url for the Cortex Processing Service."
    },
    "SitecoreEXMCryptographicKey": {
      "Type": "string",
      "DefaultValue": "0x0123456789012345678901234567890123456789012345678901234678901234",
      "Description": "64 digits hexadecimal EXM Cryptographic Key. Takes the form 0x0000000000000000000000000000000000000000000000000000000000000000"
    },
    "SitecoreEXMAuthenticationKey": {
      "Type": "string",
      "DefaultValue": "0x0123456789012345678901234567890123456789012345678901234678901234",
      "Description": "64 digits hexadecimal EXM Authentication Key. Takes the form 0x0000000000000000000000000000000000000000000000000000000000000000"
    },
    "SitecoreIdentityAuthority": {
      "Type": "string",
      "DefaultValue": "https://sitecore.auth",
      "Description": "IdentityServer provider URI."
    },
    "SitecoreIdentityAuthoritySecret": {
      "Type": "string",
      "DefaultValue": "",
      "Description": "Client secret for Sitecore Identity server."
    },
    "SitecoreTelerikEncryptionKey": {
      "Type": "string",
      "DefaultValue": "SIF-Default",
      "Description": "The key to be used by Telerik controls to encrypt interaction with Content Editors. It's a random string between 32 and 256 symbols long."
    },
    "AppHostMappingName": {
      "Type": "string",
      "Reference": "AppName",
      "Description": "The host mapping name of the app."
    },
    "AppDnsName": {
      "Type": "string",
      "Reference": "AppName",
      "Description": "The dns name of the app."
    },
    "AppSkipDatabaseInstallation": {
      "Type": "bool",
      "DefaultValue": false,
      "Description": "Skip database installation."
    },
    "PackagesTempLocation": {
      "Type": "String",
      "Description": "Alternative location to save WDP packages. If left on the default $Env:Temp will be used.",
      "DefaultValue": "",
      "Validate": "[TestPath(variable('Package.Download.Location'))]"
    },
    "PackagesDownloadLocations": {
      "Type": "String",
      "Description": "File with URI and SHA256 hashes of dynamically downloadable WDPs.",
      "DefaultValue": ".\\downloads.json"
    },
    "Update": {
      "Type": "bool",
      "Description": "The parameter for the installing delta WDP packages.",
      "DefaultValue": false
    },
    "SqlServerDeployToElasticPoolName": {
      "Type": "String",
      "Description": "The elastic pool name for deploy databases from the SQL Azure.",
      "DefaultValue": ""
    }
  },
  "Variables": {
    "Sql.Server.Password.Secure": "[ConvertToSecureString(String:parameter('SqlServerAdminPassword'),AsPlainText:true,Force:true)]",
    "Sql.Server.Credential": "[NewPSCredential(Username:parameter('SqlServerAdminUser'),Password:variable('Sql.Server.Password.Secure'))]",

    "Skip.dbDacFx": "[if(variable('Skip.Install.Databases'),'dbDacFx','null')]",
    "Skip.dbFullSql": "[if(variable('Skip.Install.Databases'),'dbFullSql','null')]",
    "Skip.Install.Databases": "[or(parameter('AppSkipDatabaseInstallation'),parameter('Update'))]",

    "Sql.Database.Core.Name": "[concat(parameter('SqlServerDatabasePrefix'), '_Core')]",
    "Sql.Database.Security.Name": "[concat(parameter('SqlServerDatabasePrefix'), '_Core')]",
    "Sql.Database.Master.Name": "[concat(parameter('SqlServerDatabasePrefix'), '_Master')]",
    "Sql.Database.Web.Name": "[concat(parameter('SqlServerDatabasePrefix'), '_Web')]",
    "Sql.Database.Reporting.Name": "[concat(parameter('SqlServerDatabasePrefix'), '_Reporting')]",
    "Sql.Database.ReferenceData.Name": "[concat(parameter('SqlServerDatabasePrefix'), '_ReferenceData')]",
    "Sql.Database.Forms.Name": "[concat(parameter('SqlServerDatabasePrefix'), '_ExperienceForms')]",
    "Sql.Database.EXMMaster.Name": "[concat(parameter('SqlServerDatabasePrefix'), '_EEXXMM.Master')]",
    "Sql.Database.Messaging.Name": "[concat(parameter('SqlServerDatabasePrefix'), '_Messaging')]",

    "Sql.Database.Core.Password": "[parameter('DatabaseCorePassword'))]",
    "Sql.Database.Security.Password": "[parameter('DatabaseSecurityPassword'))]",
    "Sql.Database.EXMMaster.Password": "[parameter('DatabaseExmMasterPassword'))]",
    "Sql.Database.Forms.Password": "[parameter('DatabaseFormsPassword'))]",
    "Sql.Database.Master.Password": "[parameter('DatabaseMasterPassword'))]",
    "Sql.Database.Web.Password": "[parameter('DatabaseWebPassword'))]",
    "Sql.Database.Messaging.Password": "[parameter('DatabaseMessagingPassword')]",
    "Sql.Database.ReferenceData.Password": "[parameter('DatabaseReferenceDataPassword')]",
    "Sql.Database.Reporting.Password": "[parameter('DatabaseReportingPassword')]",

    "Sql.Databases.To.ElasticPool": "[equal(parameter('SqlServerDeployToElasticPoolName'),'')]",
    "Sql.Databases.To.ElasticPool.Skip": "[or(variable('Skip.Install.Databases'),variable('Sql.Databases.To.ElasticPool'))]",
    "Sql.Database.Core.Alter": "[concat('ALTER DATABASE [', variable('Sql.Database.Core.Name'), '] MODIFY ( endpoint_OBJECTIVE = ELASTIC_POOL ( name = [', parameter('SqlServerDeployToElasticPoolName'), '] ));')]",
    "Sql.Database.Master.Alter": "[concat('ALTER DATABASE [', variable('Sql.Database.Master.Name'), '] MODIFY ( endpoint_OBJECTIVE = ELASTIC_POOL ( name = [', parameter('SqlServerDeployToElasticPoolName'), '] ));')]",
    "Sql.Database.Web.Alter": "[concat('ALTER DATABASE [', variable('Sql.Database.Web.Name'), '] MODIFY ( endpoint_OBJECTIVE = ELASTIC_POOL ( name = [', parameter('SqlServerDeployToElasticPoolName'), '] ));')]",
    "Sql.Database.Forms.Alter": "[concat('ALTER DATABASE [', variable('Sql.Database.Forms.Name'), '] MODIFY ( endpoint_OBJECTIVE = ELASTIC_POOL ( name = [', parameter('SqlServerDeployToElasticPoolName'), '] ));')]",
    "Sql.Database.EXMMaster.Alter": "[concat('ALTER DATABASE [', variable('Sql.Database.EXMMaster.Name'), '] MODIFY ( endpoint_OBJECTIVE = ELASTIC_POOL ( name = [', parameter('SqlServerDeployToElasticPoolName'), '] ));')]",
    "Sql.Databases.To.ElasticPool.Query": "[concat(variable('Sql.Database.Core.Alter'), variable('Sql.Database.Master.Alter'), variable('Sql.Database.Web.Alter'), variable('Sql.Database.Forms.Alter'), variable('Sql.Database.EXMMaster.Alter'))]",

    "Solr.Core.Core.Name": "[concat(parameter('SolrCorePrefix'), '_core_index')]",
    "Solr.Core.Master.Name": "[concat(parameter('SolrCorePrefix'), '_master_index')]",
    "Solr.Core.Web.Name": "[concat(parameter('SolrCorePrefix'), '_web_index')]",
    "Solr.Core.MarketingDefinitions.Master.Name": "[concat(parameter('SolrCorePrefix'), '_marketingdefinitions_master')]",
    "Solr.Core.MarketingDefinitions.Web.Name": "[concat(parameter('SolrCorePrefix'), '_marketingdefinitions_web')]",
    "Solr.Core.MarketingAssets.Master.Name": "[concat(parameter('SolrCorePrefix'), '_marketing_asset_index_master')]",
    "Solr.Core.MarketingAssets.Web.Name": "[concat(parameter('SolrCorePrefix'), '_marketing_asset_index_web')]",
    "Solr.Core.Testing.Name": "[concat(parameter('SolrCorePrefix'), '_testing_index')]",
    "Solr.Core.Suggested.Name": "[concat(parameter('SolrCorePrefix'), '_suggested_test_index')]",
    "Solr.Core.FXM.Master.Name": "[concat(parameter('SolrCorePrefix'), '_fxm_master_index')]",
    "Solr.Core.FXM.Web.Name": "[concat(parameter('SolrCorePrefix'), '_fxm_web_index')]",
    "Solr.Core.Personalization.Name": "[concat(parameter('SolrCorePrefix'), '_personalization_index')]",

    "Certificate.Store": "Cert:\\Localmachine\\My",
    "Certificate.App.Thumbprint": "[GetCertificateThumbprint(parameter('AppCertificate'), variable('Certificate.Store'))]",
    "Certificate.XConnect.Thumbprint": "[GetCertificateThumbprint(parameter('XConnectCertificate'), variable('Certificate.Store'))]",
    "Certificate.XConnect.Path": "[joinpath(variable('Certificate.Store'), variable('Certificate.XConnect.Thumbprint'))]",

    "App.Path": "[if(variable('App.Path.Test'),variable('App.Path.Default'),variable('App.Path.Custom'))]",
    "App.Path.Default": "[joinpath(environment('SystemDrive'), 'inetpub', 'wwwroot', parameter('AppName'))]",
    "App.Path.Custom": "[joinpath(parameter('AppsRootFolder'),parameter('AppName'))]",
    "App.Path.Test": "[equal(parameter('AppsRootFolder'),'')]",
    "App.DataFolder": "[joinpath(variable('App.Path'), 'App_Data')]",

    "Sitecore.Admin.Password": "[if(variable('Sitecore.Admin.Password.Test'),variable('Sitecore.Admin.Password.Generate'),parameter('SitecoreAdminPassword'))]",
    "Sitecore.Admin.Password.Test": "[equal(parameter('SitecoreAdminPassword'),'')]",
    "Sitecore.Admin.Password.Generate": "[randomstring(Length:20,DisAllowSpecial:True,EnforceComplexity:True)]",

    "IdentityServer.Client.Secret": "[parameter('SitecoreIdentityAuthoritySecret')]",
    "EndpointReporting.ApiKey": "[parameter('EndpointReportingApiKey'))]",

    "Sitecore.EXM.CryptographicKey": "[parameter('SitecoreEXMCryptographicKey'))]",
    "Sitecore.EXM.AuthenticationKey": "[parameter('SitecoreEXMAuthenticationKey'))]",

    "Sitecore.Telerik.EncryptionKey": "[if(variable('Sitecore.Telerik.EncryptionKey.Test'),variable('Sitecore.Telerik.EncryptionKey.Generate'),parameter('SitecoreTelerikEncryptionKey'))]",
    "Sitecore.Telerik.EncryptionKey.Test": "[equal(parameter('SitecoreTelerikEncryptionKey'),'SIF-Default')]",
    "Sitecore.Telerik.EncryptionKey.Generate": "[randomstring(Length:256,DisAllowSpecial:True)]",

    "Packages.DownloadLocations.File": "[ReadJson(parameter('PackagesDownloadLocations'))]",
    "Packages.DownloadLocations.File.Test": "[TestPath(Path:Parameter('PackagesDownloadLocations'))]",

    "Package.Download.Identifier": "sitecore-XP1-cm.json",
    "Package.Download.Location": "[if(variable('Package.Download.Location.Test'),Environment('Temp'),parameter('PackagesTempLocation'))]",
    "Package.Download.Location.Test": "[equal(parameter('PackagesTempLocation'),'')]",
    "Package.Download.Object": "[SelectObject(InputObject:variable('Packages.DownloadLocations.File'),ExpandProperty:variable('Package.Download.Identifier'))]",
    "Package.Download.Uri": "[SelectObject(InputObject:variable('Package.Download.Object'),ExpandProperty:'Uri')]",
    "Package.Download.Hash": "[SelectObject(InputObject:variable('Package.Download.Object'),ExpandProperty:'Hash')]",
    "Package.Download.Path": "[JoinPath(variable('Package.Download.Location'),variable('Package.Download.Filename'))]",
    "Package.Download.Document": "[SplitPath(Path:variable('Package.Download.Uri'),Leaf:true)]",
    "Package.Download.Filename": "[Split(String:variable('Package.Download.Document'),Characters:'?')]",

    "App.Package": "[if(parameter('AppPackage'),parameter('AppPackage'),variable('Package.Download.Path'))]",
    "Package.Available": "[or(variable('Package.Provided'),not(variable('Packages.DownloadLocations.File.Test')))]",
    "Package.Provided": "[if(parameter('AppPackage'),parameter('AppPackage'),'')]"
  },
  "Register": {
    "Tasks": {
      "RemoveItem": "Remove-Item",
      "WriteInformation": "Write-Information",
      "InvokeSqlcmd": "Invoke-Sqlcmd"
    },
    "ConfigFunction": {
      "ConvertToSecureString": "ConvertTo-SecureString",
      "TestPath": "Test-Path",
      "SelectObject": "Select-Object",
      "SplitPath": "Split-Path",
      "GetVariable": "Get-Variable"
    }
  },
  "Tasks": {
    "DownloadWDP": {
      "Description": "Download the WDP and verifies it against the stored hash.",
      "Type": "DownloadFile",
      "Params": {
        "SourceUri": "[variable('Package.Download.URI')]",
        "DestinationPath": "[variable('Package.Download.Path')]",
        "Hash": "[variable('Package.Download.Hash')]"
      },
      "Skip": "[variable('Package.Available')]"
    },
    "CreatePaths": {
      "Description": "Ensure the destination path for the site exists.",
      "Type": "EnsurePath",
      "Params": {
        "Exists": [
          "[variable('App.Path')]"
        ]
      },
      "Skip": "[parameter('Update')]"
    },
    "CreateAppPool": {
      "Description": "Creates or updates the app pool.",
      "Type": "AppPool",
      "Params": {
        "Name": "[parameter('AppName')]",
        "Properties": {
          "ProcessModel": {
            "identityType": "ApplicationPoolIdentity"
          }
        }
      },
      "Skip": "[parameter('Update')]"
    },
    "CreateWebsite": {
      "Description": "Creates or updates the IIS website instance.",
      "Type": "Website",
      "Params": {
        "Name": "[parameter('AppName')]",
        "ApplicationPool": "[parameter('AppName')]",
        "PhysicalPath": "[variable('App.Path')]"
      },
      "Skip": "[parameter('Update')]"
    },
    "StopWebsite": {
      "Description": "Stops the website if it is running.",
      "Type": "ManageWebsite",
      "Params": {
        "Name": "[parameter('AppName')]",
        "Action": "Stop"
      }
    },
    "StopAppPool": {
      "Description": "Stops the app pool if it is running.",
      "Type": "ManageAppPool",
      "Params": {
        "Name": "[parameter('AppName')]",
        "Action": "Stop"
      }
    },
    "RemoveDefaultBinding": {
      "Description": "Removes the default *:80 web binding.",
      "Type": "WebBinding",
      "Params": {
        "AppName": "[parameter('AppName')]",
        "Remove": [
          {
            "Port": "80",
            "IPAddress": "*"
          }
        ]
      },
      "Skip": "[parameter('Update')]"
    },
    "CreateBindingsWithThumbprint": {
      "Description": "Configures the site bindings for the webapp.",
      "Type": "WebBinding",
      "Params": {
        "AppName": "[parameter('AppName')]",
        "Add": [
          {
            "HostHeader": "[parameter('AppDnsName')]",
            "Protocol": "https",
            "SSLFlags": 1,
            "Thumbprint": "[variable('Certificate.App.Thumbprint')]"
          }
        ]
      },
      "Skip": "[or(not(parameter('AppCertificate')),parameter('Update'))]"
    },
    "CreateHostHeader": {
      "Description": "Sets a host header for the webapp.",
      "Type": "HostHeader",
      "Params": {
        "HostName": "[parameter('AppHostMappingName')]"
      },
      "Skip": "[or(not(parameter('AppHostMappingName')),parameter('Update'))]"
    },
    "SetPermissions": {
      "Description": "Sets permissions for the app pool user.",
      "Type": "FilePermissions",
      "Params": {
        "Path": "[variable('App.Path')]",
        "Rights": [
          {
            "User": "[concat('IIS AppPool\\', parameter('AppName'))]",
            "FileSystemRights": "FullControl",
            "InheritanceFlags": [
              "ContainerInherit",
              "ObjectInherit"
            ]
          }
        ]
      },
      "Skip": "[parameter('Update')]"
    },
    "SetCertStorePermissions": {
      "Description": "Set permissions for the services to access the client certificate.",
      "Type": "FilePermissions",
      "Params": {
        "Path": "[ResolveCertificatePath(variable('Certificate.XConnect.Path'))]",
        "Rights": [
          {
            "User": "[concat('IIS AppPool\\', parameter('AppName'))]",
            "FileSystemRights": [
              "Read"
            ],
            "InheritanceFlags": [
              "None"
            ]
          }
        ]
      },
      "Skip": "[parameter('Update')]"
    },
    "InstallWDP": {
      "Description": "Syncs the web deploy package with the webapp.",
      "Type": "WebDeploy",
      "Params": {
        "Verb": "Sync",
        "Arguments": {
          "Source": {
            "App.Package": "[resolvepath(variable('App.Package'))]"
          },
          "Dest": "Auto",
          "enableRule": "DoNotDeleteRule",
          "SetParam": [
            {
              "Name": "Application Path",
              "Value": "[parameter('AppName')]"
            },
            {
              "Name": "Database Server Name",
              "Value": "[parameter('SqlServerInstance')]"
            },
            {
              "Name": "Sitecore Admin New Password",
              "Value": "[variable('Sitecore.Admin.Password')]"
            },
            {
              "Name": "Database Admin User Name",
              "Value": "[parameter('SqlServerAdminUser')]"
            },
            {
              "Name": "Database Admin User Password",
              "Value": "[parameter('SqlServerAdminPassword')]"
            },
            {
              "Name": "Core DB Name",
              "Value": "[variable('Sql.Database.Core.Name')]"
            },
            {
              "Name": "Security DB Name",
              "Value": "[variable('Sql.Database.Security.Name')]"
            },
            {
              "Name": "Master DB Name",
              "Value": "[variable('Sql.Database.Master.Name')]"
            },
            {
              "Name": "Web DB Name",
              "Value": "[variable('Sql.Database.Web.Name')]"
            },
            {
              "Name": "Reporting DB Name",
              "Value": "[variable('Sql.Database.Reporting.Name')]"
            },
            {
              "Name": "XDB Reference Data DB Name",
              "Value": "[variable('Sql.Database.ReferenceData.Name')]"
            },
            {
              "Name": "Experience Forms DB Name",
              "Value": "[variable('Sql.Database.Forms.Name')]"
            },
            {
              "Name": "EXM Master DB Name",
              "Value": "[variable('Sql.Database.EXMMaster.Name')]"
            },
            {
              "Name": "Messaging DB Name",
              "Value": "[variable('Sql.Database.Messaging.Name')]"
            },
            {
              "Name": "Core DB User Name",
              "Value": "[parameter('DatabaseCoreUser')]"
            },
            {
              "Name": "Core DB User Password",
              "Value": "[variable('Sql.Database.Core.Password')]"
            },
            {
              "Name": "Security DB User Name",
              "Value": "[parameter('DatabaseSecurityUser')]"
            },
            {
              "Name": "Security DB User Password",
              "Value": "[variable('Sql.Database.Security.Password')]"
            },
            {
              "Name": "Master DB User Name",
              "Value": "[parameter('DatabaseMasterUser')]"
            },
            {
              "Name": "Master DB User Password",
              "Value": "[variable('Sql.Database.Master.Password')]"
            },
            {
              "Name": "Web DB User Name",
              "Value": "[parameter('DatabaseWebUser')]"
            },
            {
              "Name": "Web DB User Password",
              "Value": "[variable('Sql.Database.Web.Password')]"
            },
            {
              "Name": "Reporting DB User Name",
              "Value": "[parameter('DatabaseReportingUser')]"
            },
            {
              "Name": "Reporting DB User Password",
              "Value": "[variable('Sql.Database.Reporting.Password')]"
            },
            {
              "Name": "XDB Reference Data DB User Name",
              "Value": "[parameter('DatabaseReferenceDataUser')]"
            },
            {
              "Name": "XDB Reference Data DB User Password",
              "Value": "[variable('Sql.Database.ReferenceData.Password')]"
            },
            {
              "Name": "Experience Forms DB User Name",
              "Value": "[parameter('DatabaseFormsUser')]"
            },
            {
              "Name": "Experience Forms DB User Password",
              "Value": "[variable('Sql.Database.Forms.Password')]"
            },
            {
              "Name": "EXM Master DB User Name",
              "Value": "[parameter('DatabaseExmMasterUser')]"
            },
            {
              "Name": "EXM Master DB User Password",
              "Value": "[variable('Sql.Database.EXMMaster.Password')]"
            },
            {
              "Name": "Messaging DB User Name",
              "Value": "[parameter('DatabaseMessagingUser')]"
            },
            {
              "Name": "Messaging DB User Password",
              "Value": "[variable('Sql.Database.Messaging.Password')]"
            },
            {
              "Name": "XConnect Collection",
              "Value": "[parameter('EndpointXConnectCollection')]"
            },
            {
              "Name": "XConnect Search",
              "Value": "[parameter('EndpointXConnectCollectionSearch')]"
            },
            {
              "Name": "Xdb Reference Data Client",
              "Value": "[parameter('EndpointReferenceData')]"
            },
            {
              "Name": "XDB MA Reporting Client",
              "Value": "[parameter('EndpointMarketingAutomationReporting')]"
            },
            {
              "Name": "XDB MA Ops Client",
              "Value": "[parameter('EndpointMarketingAutomationOperations')]"
            },
            {
              "Name": "Cortex Reporting Client",
              "Value": "[parameter('EndpointCortexReporting')]"
            },
            {
              "Name": "Cortex Processing Engine",
              "Value": "[parameter('EndpointCortexProcessing')]"
            },
            {
              "Name": "XConnect Server Certificate Validation Thumbprint",
              "Value": "[variable('Certificate.XConnect.Thumbprint')]"
            },
            {
              "Name": "Processing Site URL",
              "Value": "[parameter('EndpointProcessing')]"
            },
            {
              "Name": "Reporting API Key",
              "Value": "[variable('EndpointReporting.ApiKey')]"
            },
            {
              "Name": "SOLR Connection String",
              "Value": "[parameter('SolrUrl')]"
            },
            {
              "Name": "Solr Core Index Name",
              "Value": "[variable('Solr.Core.Core.Name')]"
            },
            {
              "Name": "Solr Master Index Name",
              "Value": "[variable('Solr.Core.Master.Name')]"
            },
            {
              "Name": "Solr Web Index Name",
              "Value": "[variable('Solr.Core.Web.Name')]"
            },
            {
              "Name": "Solr Marketing Definitions Master Index Name",
              "Value": "[variable('Solr.Core.MarketingDefinitions.Master.Name')]"
            },
            {
              "Name": "Solr Marketing Definitions Web Index Name",
              "Value": "[variable('Solr.Core.MarketingDefinitions.Web.Name')]"
            },
            {
              "Name": "Solr Marketing Asset Master Index Name",
              "Value": "[variable('Solr.Core.MarketingAssets.Master.Name')]"
            },
            {
              "Name": "Solr Marketing Asset Web Index Name",
              "Value": "[variable('Solr.Core.MarketingAssets.Web.Name')]"
            },
            {
              "Name": "Solr Testing Index Name",
              "Value": "[variable('Solr.Core.Testing.Name')]"
            },
            {
              "Name": "Solr Suggested Index Name",
              "Value": "[variable('Solr.Core.Suggested.Name')]"
            },
            {
              "Name": "Solr FXM Master Index Name",
              "Value": "[variable('Solr.Core.FXM.Master.Name')]"
            },
            {
              "Name": "Solr FXM Web Index Name",
              "Value": "[variable('Solr.Core.FXM.Web.Name')]"
            },
            {
              "Name": "Solr Personalization Index Name",
              "Value": "[variable('Solr.Core.Personalization.Name')]"
            },
            {
              "Name": "Sitecore Identity Authority",
              "Value": "[parameter('SitecoreIdentityAuthority')]"
            },
            {
              "Name": "Sitecore Identity Secret",
              "Value": "[variable('IdentityServer.Client.Secret')]"
            },
            {
              "Name": "Telerik Encryption Key",
              "Value": "[variable('Sitecore.Telerik.EncryptionKey')]"
            },
            {
              "Name": "EXM Cryptographic Key",
              "Value": "[variable('Sitecore.EXM.CryptographicKey')]"
            },
            {
              "Name": "EXM Authentication Key",
              "Value": "[variable('Sitecore.EXM.AuthenticationKey')]"
            },
            {
              "Name": "EXM EDS Provider",
              "Value": "[parameter('SitecoreEXMEdsPProvider')]"
            }
          ],
          "Skip": [
            {
              "ObjectName": "[variable('Skip.dbDacFx')]"
            },
            {
              "ObjectName": "[variable('Skip.dbFullSql')]"
            }
          ]
        }
      }
    },
    "AddSqlDatabasesToElasticPool": {
      "Description": "Add Azure SQL databases to the Elastic pool.",
      "Type": "InvokeSqlcmd",
      "Params": {
        "ServerInstance": "[parameter('SqlServerInstance')]",
        "Credential": "[variable('Sql.Server.Credential')]",
        "Sql.Databases.To.ElasticPool.Query": "[variable('Sql.Databases.To.ElasticPool.Query')]"
      },
      "Skip": "[variable('Sql.Databases.To.ElasticPool.Skip')]"
    },
    "CreateBindingsWithDevelopmentThumbprint": {
      "Description": "Creates a new thumbprint with a custom CA.",
      "Type": "AddWebFeatureSSL",
      "Params": {
        "AppName": "[parameter('AppName')]",
        "HostName": "[parameter('AppDnsName')]",
        "OutputDirectory": "[variable('App.DataFolder')]"
      },
      "Skip": "[or(parameter('AppCertificate'),parameter('Update'))]"
    },
    "SetLicense": {
      "Description": "Copies the license file to the instance data folder.",
      "Type": "Copy",
      "Params": {
        "Source": "[resolvepath(parameter('AppsLicenseFile'))]",
        "Destination": "[variable('App.DataFolder')]"
      },
      "Skip": "[parameter('Update')]"
    },
    "StartAppPool": {
      "Description": "Starts the app pool.",
      "Type": "ManageAppPool",
      "Params": {
        "Name": "[parameter('AppName')]",
        "Action": "Start"
      }
    },
    "StartWebsite": {
      "Description": "Starts the webapp.",
      "Type": "ManageWebsite",
      "Params": {
        "Name": "[parameter('AppName')]",
        "Action": "Start"
      }
    },
    "UpdateSolrSchema": {
      "Description": "Update the solr schemas.",
      "Type": "SitecoreUrl",
      "Params": {
        "SitecoreInstanceRoot": "[concat('https://', parameter('AppDnsName'))]",
        "SitecoreActionPath": "sitecore/admin/PopulateManagedSchema.aspx?indexes=all",
        "UserName": "admin",
        "Password": "[variable('Sitecore.Admin.Password')]"
      },
      "Skip": "[parameter('Update')]"
    },
    "DisplayPassword": {
      "Description": "Displays the admin password.",
      "Type": "WriteInformation",
      "Params": {
        "MessageData": "[concat('Sitecore Admin Password: ',variable('Sitecore.Admin.Password'))]",
        "InformationAction": "Continue"
      },
      "Skip": "[parameter('Update')]"
    }
  },
  "UninstallTasks": {
    "StopWebsite": {
      "Description": "Stops the website if it is running.",
      "Type": "ManageWebsite",
      "Params": {
        "Name": "[parameter('AppName')]",
        "Action": "Stop",
        "ErrorAction": "SilentlyContinue"
      }
    },
    "StopAppPool": {
      "Description": "Stops the app pool if it is running.",
      "Type": "ManageAppPool",
      "Params": {
        "Name": "[parameter('AppName')]",
        "Action": "Stop",
        "ErrorAction": "SilentlyContinue"
      }
    },
    "RemoveWebsite": {
      "Description": "Removes the IIS webapp.",
      "Type": "RemoveWebsite",
      "Params": {
        "Name": "[parameter('AppName')]"
      }
    },
    "RemoveAppPool": {
      "Description": "Removes the IIS application pool.",
      "Type": "RemoveAppPool",
      "Params": {
        "Name": "[parameter('AppName')]"
      }
    },
    "RemoveContent": {
      "Description": "Removes website content.",
      "Type": "RemoveItem",
      "Params": {
        "Path": "[variable('App.Path')]",
        "Recurse": true,
        "ErrorAction": "SilentlyContinue"
      }
    },
    "RemoveHostHeader": {
      "Description": "Removes the website host name.",
      "Type": "HostHeader",
      "Params": {
        "HostName": "[parameter('AppName')]",
        "Action": "Remove"
      }
    },
    "RemoveDatabases": {
      "Description": "Removes the databases.",
      "Type": "RemoveSQLDatabase",
      "Params": {
        "ServerName": "[parameter('SqlServerInstance')]",
        "Username": "[parameter('SqlServerAdminUser')]",
        "Password": "[variable('Sql.Server.Password.Secure')]",
        "DatabaseName": [
          "[variable('Sql.Database.Core.Name')]",
          "[variable('Sql.Database.Master.Name')]",
          "[variable('Sql.Database.Web.Name')]",
          "[variable('Sql.Database.Forms.Name')]",
          "[variable('Sql.Database.EXMMaster.Name')]"
        ]
      }
    }
  }
}
